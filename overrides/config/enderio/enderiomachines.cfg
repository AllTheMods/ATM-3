# Configuration file

capacitor {
    I:alloy_smelter_power_buffer=100000
    S:alloy_smelter_power_buffer.scaler=POWER
    I:alloy_smelter_power_intake=80
    S:alloy_smelter_power_intake.scaler=POWER
    I:alloy_smelter_power_use=20
    S:alloy_smelter_power_use.scaler=POWER
    I:attractor_power_buffer=100000
    S:attractor_power_buffer.scaler=POWER
    I:attractor_power_intake=80
    S:attractor_power_intake.scaler=QUADRATIC
    I:attractor_power_use=20
    S:attractor_power_use.scaler=QUADRATIC
    I:attractor_range=16
    S:attractor_range.scaler=QUADRATIC
    I:aversion_power_buffer=100000
    S:aversion_power_buffer.scaler=POWER
    I:aversion_power_intake=640
    S:aversion_power_intake.scaler=CUBIC
    I:aversion_power_use=80
    S:aversion_power_use.scaler=CUBIC
    I:aversion_range=16
    S:aversion_range.scaler=RANGE
    I:buffer_power_buffer=100000
    S:buffer_power_buffer.scaler=POWER
    I:buffer_power_intake=2500
    S:buffer_power_intake.scaler=CUBIC
    I:buffer_power_use=0
    S:buffer_power_use.scaler=FIXED_1
    I:combustion_power_buffer=100000
    S:combustion_power_buffer.scaler=POWER
    I:combustion_power_gen=1
    S:combustion_power_gen.scaler=CHEMICAL
    I:combustion_power_loss=0
    S:combustion_power_loss.scaler=FIXED_1
    I:creative_buffer_power_buffer=1000000
    S:creative_buffer_power_buffer.scaler=FIXED_1
    I:creative_buffer_power_intake=100000
    S:creative_buffer_power_intake.scaler=FIXED_1
    I:creative_buffer_power_use=0
    S:creative_buffer_power_use.scaler=FIXED_1
    I:dialing_device_power_buffer=100000
    S:dialing_device_power_buffer.scaler=FIXED_1
    I:dialing_device_power_intake=80
    S:dialing_device_power_intake.scaler=FIXED_1
    I:dialing_device_power_use=5
    S:dialing_device_power_use.scaler=FIXED_1
    I:dialing_device_power_use_paper=1000
    S:dialing_device_power_use_paper.scaler=FIXED_1
    I:dialing_device_power_use_teleport=1000
    S:dialing_device_power_use_teleport.scaler=FIXED_1
    I:enhanced_combustion_power_buffer=200000
    S:enhanced_combustion_power_buffer.scaler=POWER
    I:enhanced_combustion_power_gen=1
    S:enhanced_combustion_power_gen.scaler=CHEMICAL
    I:enhanced_combustion_power_loss=0
    S:enhanced_combustion_power_loss.scaler=FIXED_1
    I:farm_base_size=1
    S:farm_base_size.scaler=FIXED_1
    I:farm_bonus_size=2
    S:farm_bonus_size.scaler=IDENTITY
    I:farm_power_buffer=250000
    S:farm_power_buffer.scaler=RANGE
    I:farm_power_intake=400
    S:farm_power_intake.scaler=RANGE
    I:farm_power_use=10
    S:farm_power_use.scaler=RANGE
    I:farm_stack_limit=16
    S:farm_stack_limit.scaler=QUADRATIC
    I:impulse_hopper_power_buffer=100000
    S:impulse_hopper_power_buffer.scaler=POWER
    I:impulse_hopper_power_intake=80
    S:impulse_hopper_power_intake.scaler=POWER
    I:impulse_hopper_power_use=16
    S:impulse_hopper_power_use.scaler=POWER
    I:impulse_hopper_power_use_per_item=10
    S:impulse_hopper_power_use_per_item.scaler=FIXED_1
    I:impulse_hopper_speed=1
    S:impulse_hopper_speed.scaler=QUADRATIC
    I:inhibitor_power_buffer=100000
    S:inhibitor_power_buffer.scaler=POWER
    I:inhibitor_power_intake=80
    S:inhibitor_power_intake.scaler=CUBIC
    I:inhibitor_power_use=20
    S:inhibitor_power_use.scaler=CUBIC
    I:inhibitor_range=8
    S:inhibitor_range.scaler=RANGE
    I:painter_power_buffer=100000
    S:painter_power_buffer.scaler=POWER
    I:painter_power_intake=80
    S:painter_power_intake.scaler=POWER
    I:painter_power_use=20
    S:painter_power_use.scaler=POWER
    I:relocator_power_buffer=100000
    S:relocator_power_buffer.scaler=POWER
    I:relocator_power_intake=640
    S:relocator_power_intake.scaler=CUBIC
    I:relocator_power_use=80
    S:relocator_power_use.scaler=CUBIC
    I:relocator_range=12
    S:relocator_range.scaler=RANGE
    I:sag_mill_power_buffer=100000
    S:sag_mill_power_buffer.scaler=POWER
    I:sag_mill_power_intake=80
    S:sag_mill_power_intake.scaler=POWER
    I:sag_mill_power_use=20
    S:sag_mill_power_use.scaler=POWER
    I:simple_alloy_smelter_power_buffer=1000
    S:simple_alloy_smelter_power_buffer.scaler=FIXED_1
    I:simple_alloy_smelter_power_intake=20
    S:simple_alloy_smelter_power_intake.scaler=FIXED_1
    I:simple_alloy_smelter_power_loss=1
    S:simple_alloy_smelter_power_loss.scaler=FIXED_1
    I:simple_alloy_smelter_power_use=10
    S:simple_alloy_smelter_power_use.scaler=FIXED_1
    I:simple_sag_mill_power_buffer=1000
    S:simple_sag_mill_power_buffer.scaler=FIXED_1
    I:simple_sag_mill_power_intake=20
    S:simple_sag_mill_power_intake.scaler=FIXED_1
    I:simple_sag_mill_power_loss=1
    S:simple_sag_mill_power_loss.scaler=FIXED_1
    I:simple_sag_mill_power_use=10
    S:simple_sag_mill_power_use.scaler=FIXED_1
    I:simple_stirling_power_buffer=1000
    S:simple_stirling_power_buffer.scaler=FIXED_1
    I:simple_stirling_power_gen=20
    S:simple_stirling_power_gen.scaler=FIXED_1
    I:simple_stirling_power_loss=1
    S:simple_stirling_power_loss.scaler=FIXED_1
    I:slice_power_buffer=100000
    S:slice_power_buffer.scaler=POWER
    I:slice_power_intake=160
    S:slice_power_intake.scaler=QUADRATIC
    I:slice_power_use=80
    S:slice_power_use.scaler=QUADRATIC
    I:soul_binder_power_buffer=100000
    S:soul_binder_power_buffer.scaler=POWER
    I:soul_binder_power_intake=1000
    S:soul_binder_power_intake.scaler=QUADRATIC
    I:soul_binder_power_use=500
    S:soul_binder_power_use.scaler=QUADRATIC
    I:soul_binder_sound_pitch=1
    S:soul_binder_sound_pitch.scaler=IDENTITY
    I:spawner_power_buffer=100000
    S:spawner_power_buffer.scaler=POWER
    I:spawner_power_intake=200
    S:spawner_power_intake.scaler=SPAWNER
    I:spawner_power_use=160
    S:spawner_power_use.scaler=SPAWNER
    I:spawner_speedup=1
    S:spawner_speedup.scaler=QUADRATIC
    I:stirling_power_buffer=100000
    S:stirling_power_buffer.scaler=POWER
    I:stirling_power_gen=40
    S:stirling_power_gen.scaler=DROPOFF
    I:stirling_power_loss=0
    S:stirling_power_loss.scaler=FIXED_1
    I:stirling_power_time=1
    S:stirling_power_time.scaler=BURNTIME
    I:transceiver_power_buffer=500000
    S:transceiver_power_buffer.scaler=CUBIC
    I:transceiver_power_intake=40960
    S:transceiver_power_intake.scaler=POWER
    I:transceiver_power_use=10
    S:transceiver_power_use.scaler=QUADRATIC
    I:vat_power_buffer=100000
    S:vat_power_buffer.scaler=POWER
    I:vat_power_intake=80
    S:vat_power_intake.scaler=POWER
    I:vat_power_use=20
    S:vat_power_use.scaler=CHEMICAL
    I:weather_power_buffer=100000
    S:weather_power_buffer.scaler=POWER
    I:weather_power_fluid_use=4
    S:weather_power_fluid_use.scaler=POWER
    I:weather_power_intake=80
    S:weather_power_intake.scaler=POWER
    I:weather_power_use=20
    S:weather_power_use.scaler=POWER
    I:wired_power_buffer=100000
    S:wired_power_buffer.scaler=POWER
    I:wired_power_charge=1
    S:wired_power_charge.scaler=CHARGE
    I:wired_power_intake=10000
    S:wired_power_intake.scaler=POWER
    I:wired_power_output=10000
    S:wired_power_output.scaler=POWER
    I:wireless_power_buffer=200000
    S:wireless_power_buffer.scaler=FIXED_1
    I:wireless_power_intake=10000
    S:wireless_power_intake.scaler=FIXED_1
    I:wireless_power_output=10000
    S:wireless_power_output.scaler=FIXED_1
    I:zombie_power_buffer=100000
    S:zombie_power_buffer.scaler=POWER
    I:zombie_power_gen=80
    S:zombie_power_gen.scaler=FIXED_1
    I:zombie_power_loss=0
    S:zombie_power_loss.scaler=FIXED_1
}


client {
    # Should blood be red or green? (-1=green, 0=auto, 1=red) [range: -1 ~ 1, default: 0]
    I:bloodEnabled=0

    # If true, only a handful of sample painter recipes will be shown in JEI. Enable this if you have timing problems starting a world or logging into a server. [default: true]
    B:jeiUseShortenedPainterRecipes=true
}


experience {
    # Millibuckets per tick that can get in or out. (synced from server) [range: 1 ~ 1000000000, default: 200]
    I:maxIO=200
}


farm {
    # Disable the notification text above the farm block. [default: false]
    B:disableFarmNotification=false

    # The chance that bonemeal will be tried. (synced from server) [range: 0.0 ~ 1.0, default: 0.75]
    S:farmBonemealChance=0.75

    # The delay (in blocks) between an unsuccessful bonemealing and the next try. (synced from server) [range: 0 ~ 2147483647, default: 4]
    I:farmBonemealDelayFail=4

    # The delay (in blocks) between a successful bonemealing and the next try. (synced from server) [range: 0 ~ 2147483647, default: 16]
    I:farmBonemealDelaySuccess=16

    # The amount of energy an unsuccessful bonemealing uses. (synced from server) [range: 0 ~ 2147483647, default: 80]
    I:farmBonemealEnergyUseFail=80

    # The amount of energy a successful bonemealing uses. (synced from server) [range: 0 ~ 2147483647, default: 160]
    I:farmBonemealEnergyUseSuccess=160

    # The amount of energy harvesting a block with an axe uses. (synced from server) [range: 0 ~ 2147483647, default: 1000]
    I:farmHarvestAxeEnergyUse=1000

    # The amount of energy harvesting a block with anything else but an axe uses. (synced from server) [range: 0 ~ 2147483647, default: 500]
    I:farmHarvestEnergyUse=500

    # The amount of energy planting a seed uses. (synced from server) [range: 0 ~ 2147483647, default: 0]
    I:farmPlantEnergyUse=0

    # The amount of saplings the farm has to have in reserve to switch to shearing all leaves. If there are less saplings in store, it will only shear part the leaves and break the others for saplings. Set this to 0 to always shear all leaves. (synced from server) [range: 0 ~ 64, default: 8]
    I:farmSaplingReserveAmount=8

    # If this is enabled the farm will stop if there is not at least one empty output slot. Otherwise it will only stop if all output slots are full. (synced from server) [default: true]
    B:farmStopOnNoOutputSlots=true

    # The amount of energy tilling the ground uses. (synced from server) [range: 0 ~ 2147483647, default: 0]
    I:farmTillEnergyUse=0

    # The chance that a tool will take damage when used. (synced from server) [range: 0.0 ~ 1.0, default: 1.0]
    S:farmToolDamageChance=1.0

    # If enabled, output overflow will be queued, otherwise it will spill. [default: true]
    B:useOutputQueue=true
}


generator {

    combustion {
        # How large should the fuel and coolant tanks of the combustion generator be? (synced from server) [range: 500 ~ 50000, default: 5000]
        I:combGenTankSize=5000

        # How much better than the normal combustion generator is the enhanced one? This effects the tank size and the energy generated per tick. (synced from server) [range: 1.0 ~ 10.0, default: 1.5]
        S:enhancedCombGenQuality=1.5
    }

    solar {
        # When enabled Photovoltaic Panels of different kinds can join together as a multi-block (synced from server) [default: false]
        B:canSolarTypesJoin=false

        # Cost in XP levels of the Solar I upgrade. (synced from server) [range: 1 ~ 2147483647, default: 4]
        I:darkSteelSolarOneCost=4

        # RF per SECOND generated by the Solar I upgrade. Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 10]
        I:darkSteelSolarOneGen=10

        # Cost in XP levels of the Solar III upgrade. (synced from server) [range: 1 ~ 2147483647, default: 24]
        I:darkSteelSolarThreeCost=24

        # RF per SECOND generated by the Solar III upgrade. Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 160]
        I:darkSteelSolarThreeGen=160

        # Cost in XP levels of the Solar II upgrade. (synced from server) [range: 1 ~ 2147483647, default: 8]
        I:darkSteelSolarTwoCost=8

        # RF per SECOND generated by the Solar II upgrade. Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 40]
        I:darkSteelSolarTwoGen=40

        # Maximum output in RF/t of the Vibrant Photovoltaic Panels. (synced from server) [range: 1 ~ 2147483647, default: 160]
        I:solarPanelFourOutput=160

        # Maximum output in RF/t of the Simple Photovoltaic Panels. (synced from server) [range: 1 ~ 2147483647, default: 10]
        I:solarPanelOneOutput=10

        # Maximum output in RF/t of the Advanced Photovoltaic Panels. (synced from server) [range: 1 ~ 2147483647, default: 80]
        I:solarPanelThreeOutput=80

        # Maximum output in RF/t of the Photovoltaic Panels. (synced from server) [range: 1 ~ 2147483647, default: 40]
        I:solarPanelTwoOutput=40

        # How often (in ticks) the Photovoltaic Panels should check the sun's angle. (synced from server) [range: 1 ~ 2147483647, default: 100]
        I:solarRecalcSunTick=100
    }

    zombie {
        # How full does the tank need to be for the zombie head to produce energy?. (0.0-0.9995) (synced from server) [range: 0.0 ~ 0.9995, default: 0.7]
        S:minimumTankLevel=0.7

        # The number of ticks one bucket of fuel lasts. (synced from server) [range: 1 ~ 2147483647, default: 12000]
        I:ticksPerBucketOfFuel=12000
    }

}


impulse_hopper {
    # How many ticks should it take for each operation? (Note: This scales quadratically with the capacitor) (synced from server) [range: 1 ~ 20, default: 20]
    I:impulseHopperWorkEveryTick=20
}


inhibitor {
    # When true, slimes wont be allowed to spawn at all. Only added to aid testing in super flat worlds. (synced from server) [default: false]
    B:stopAllSlimes=false

    # When true, squid wont be allowed to spawn at all. Only added to aid testing in super flat worlds. (synced from server) [default: false]
    B:stopAllSquid=false
}


killerjoe {
    # The reach of attacks above and below Joe. (synced from server) [range: 1.0 ~ 32.0, default: 2.0]
    D:killerJoeAttackHeight=2.0

    # The reach of attacks in front of Joe. (synced from server) [range: 1.0 ~ 32.0, default: 4.0]
    D:killerJoeAttackLength=4.0

    # The reach of attacks to each side of Joe. (synced from server) [range: 1.0 ~ 32.0, default: 2.0]
    D:killerJoeAttackWidth=2.0

    # The distance from which XP will be gathered above and below Joe. (synced from server) [range: 1.0 ~ 32.0, default: 2.0]
    D:killerJoeHooverXpHeight=2.0

    # The distance from which XP will be gathered in front of Joe. (synced from server) [range: 1.0 ~ 32.0, default: 10.0]
    D:killerJoeHooverXpLength=10.0

    # The distance from which XP will be gathered to each side of Joe. (synced from server) [range: 1.0 ~ 32.0, default: 5.0]
    D:killerJoeHooverXpWidth=5.0

    # Set whether the Killer Joe can attack through blocks. (synced from server) [default: false]
    B:killerJoeMustSee=false

    # The number of millibuckets of nutrient fluid used per attack. (synced from server) [range: 1 ~ 2147483647, default: 5]
    I:killerJoeNutrientUsePerAttackMb=5

    # If enabled, picked up XP will be used for the enchantement 'Mending' on the weapon. (synced from server) [default: true]
    B:killerMendingEnabled=true

    # If enabled, Creepers will explode for the Killer Joe just like for any player. (synced from server) [default: false]
    B:killerProvokesCreeperExpolosions=false

    # Set whether the Killer Joe swings even if PvP is off (that swing will do nothing unless killerPvPoffIsIgnored is enabled). (synced from server) [default: false]
    B:killerPvPoffDisablesSwing=false

    # Set whether the Killer Joe ignores PvP settings and always hits players (killerPvPoffDisablesSwing must be off for this to work). (synced from server) [default: false]
    B:killerPvPoffIsIgnored=false
}


soulbinder {
    # Amount of XP fluid in mB the Soul Binder can accept per tick. (synced from server) [range: 1 ~ 2147483647, default: 50]
    I:soulFluidInputRate=50

    # Amount of XP fluid in mB that can be extracted from the Soul Binder per tick. (synced from server) [range: 1 ~ 2147483647, default: 50]
    I:soulFluidOutputRate=50
}


spawner {
    # The number of levels it costs to add a broken spawner (synced from server) [range: 1 ~ 2147483647, default: 16]
    I:powerSpawnerAddSpawnerCost=16

    # If true, spawners for all mobs will be added to the creative menu. Otherwise only a handfull of samples are added. (Client setting.) [default: false]
    B:poweredSpawnerAddAllMobsCreative=false

    # Number of seconds in which spawned entities are protected from despawning (synced from server) [range: 0 ~ 107374182, default: 120]
    I:poweredSpawnerDespawnTimeSeconds=120

    # Max tick delay between spawns for a non-upgraded spawner (synced from server) [range: 1 ~ 2147483647, default: 800]
    I:poweredSpawnerMaxDelayTicks=800

    # Max number of entities in the nearby area until no more are spawned. A zero value will remove this check (synced from server) [range: 0 ~ 2147483647, default: 6]
    I:poweredSpawnerMaxNearbyEntities=6

    # Max distance of the closest player for the spawner to be active. A zero value will remove the player check (synced from server) [range: 0 ~ 64, default: 0]
    I:poweredSpawnerMaxPlayerDistance=0

    # Number of tries to find a suitable spawning location (synced from server) [range: 1 ~ 9, default: 3]
    I:poweredSpawnerMaxSpawnTries=3

    # Min tick delay between spawns for a non-upgraded spawner (synced from server) [range: 1 ~ 2147483647, default: 200]
    I:poweredSpawnerMinDelayTicks=200

    # Number of entities to spawn each time (synced from server) [range: 1 ~ 16, default: 4]
    I:poweredSpawnerSpawnCount=4

    # Spawning range in X/Z (vanilla=4) (synced from server) [range: 1 ~ 32, default: 4]
    I:poweredSpawnerSpawnRange=4

    # If true, regular spawn checks such as lighting level and dimension will be made before spawning mobs (synced from server) [default: false]
    B:poweredSpawnerUseVanillaSpawChecks=false
}


tank {
    # The size of an advanced tank in mB. (synced from server) [range: 0 ~ 2147483647, default: 32000]
    I:tankSizeAdvanced=32000

    # The size of a normal tank in mB. (synced from server) [range: 0 ~ 2147483647, default: 16000]
    I:tankSizeNormal=16000

    # If true, when trashing items in lava, a tiny amount more lava will be produced. Trashing items in other hot liquids will NOT have this effect. (synced from server) [default: true]
    B:tankSmeltTrashIntoLava=true
}


telepad {
    I:telepadEnergyBufferRF=100000
    I:telepadEnergyUsePerTickRF=4000
    S:telepadFluidType=ender_distillation

    # The max amount of fluid in mb used per teleport. If set to 0 fluid use will be disabled (synced from server) [range: 0 ~ 2147483647, default: 50]
    I:telepadFluidUse=50

    # If true, TelePads will also act as normal Travel Anchors. (synced from server) [default: true]
    B:telepadIsTravelAnchor=true

    # If true, the coordinates cannot be set via the GUI, the coord selector must be used. (synced from server) [default: true]
    B:telepadLockCoords=true

    # If true, the dimension cannot be set via the GUI, the coord selector must be used. (synced from server) [default: true]
    B:telepadLockDimension=true

    # Power for a teleport is calculated by the formula:
    # power = [this value] * ln(0.005*distance + 1) (synced from server) [range: 0 ~ 2147483647, default: 100000]
    I:telepadPowerCoefficient=100000

    # The amount of RF required for an interdimensional teleport. (synced from server) [range: 0 ~ 2147483647, default: 100000]
    I:telepadPowerInterdimensional=100000

    # Can be used to disable the 'shrinking' effect of the telepad in case of conflicts with other mods. (client setting) [default: true]
    B:telepadShrinkEffect=true
}


tranceiver {
    # The energy cost of transporting a bucket of fluid via a Dimensional Transceiver. (synced from server) [range: 0 ~ 2147483647, default: 100]
    I:bucketEnergyCost=100

    # Amount of energy lost when transfered by Dimensional Transceiver; 0 is no loss, 1 is 100% loss. (synced from server) [range: 0.0 ~ 1.7976931348623157E308, default: 0.1]
    D:energyLoss=0.1
}


vacuum {
    # Maximum number of items the vacuum chest can effect at a time. (-1 for unlimited) (synced from server) [range: -1 ~ 2147483647, default: 40]
    I:vacuumChestMaxItems=40

    # The maximum range of the vacuum chest (synced from server) [range: 1 ~ 32, default: 6]
    I:vacuumChestRange=6

    # The range of the XP vacuum (synced from server) [range: 1 ~ 32, default: 6]
    I:vacuumXPRange=6

    # Velocity multiplier for attracting XP orbs (synced from server) [range: 0.01 ~ 0.5, default: 0.1]
    D:vacuumXPVelocity=0.1
}


vat {
    # Size of the Vat's input tank in mB. (synced from server) [range: 1 ~ 2147483647, default: 8000]
    I:vatInputTankSize=8000

    # Size of the Vat's output tank in mB. (synced from server) [range: 1 ~ 2147483647, default: 8000]
    I:vatOutputTankSize=8000
}


weather {
    # The fluid required (in mB) to set the world to clear weather. (synced from server) [range: 1 ~ 2147483647, default: 2000]
    I:weatherObeliskClearFluid=2000

    # The fluid required (in mB) to set the world to rainy weather. (synced from server) [range: 1 ~ 2147483647, default: 500]
    I:weatherObeliskRainFluid=500

    # The fluid required (in mB) to set the world to thundering weather. (synced from server) [range: 1 ~ 2147483647, default: 1000]
    I:weatherObeliskThunderFluid=1000
}


