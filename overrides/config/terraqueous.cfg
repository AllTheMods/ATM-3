# Configuration file

general {

    ##########################################################################################################
    # blocks
    #--------------------------------------------------------------------------------------------------------#
    # Controls what blocks are added by Terraqueous
    # Disabling a block after it was added will remove it from the world
    ##########################################################################################################

    blocks {
        # IDs: border
        B:addBorders=true

        # IDs: clouds, cloudfancy, cloud_staff, cloud_talisman
        # NOTE: enables addEnderTable because it is needed to craft the Talisman used to walk-on clouds
        B:addClouds=true

        # Adds: Cloud Doors, TrapDoors, Fences, FenceGates, Water Vapor & Glow Vapor
        # IDs: type_cloud
        B:addCraftables_Cloud=true

        # Adds: Wood Doors, TrapDoors, Fences, FenceGates, Paper Block & Glow Paper
        # type_earth
        B:addCraftables_Wood=true

        # Adds: CloudWorkbench, CloudFurnace, Cloud&Earth CraftBench, Cloud&Earth CraftFurnace, StormForge
        # IDs: crafting
        B:addCrafting=true

        # Adds: Breakable ground objects
        # IDs: doodads
        B:addDoodads=true

        # Adds: An Enchanting Table that uses EnderPowder, and an EnderMonocle to read from it
        # IDs: ender_table, ender_monocle
        B:addEnderTable=true

        # Adds: Two types of flower pots
        # Changes: default Flower Pot recipe
        # IDs: flowerpot
        B:addFlowerPots=true

        # Adds: 16 new flowers that can spread and grow (see TWEAKS.enableFlowerSpread)
        # IDs: flowers_cluster, flowers_single
        B:addFlowers=true

        # Adds: Hay blocks, thresh, loose hay
        # IDs: hay
        B:addHayBlocks=true

        # IDs: earth_ore
        B:addOres=true

        # Adds: Pergolas
        # IDs: pergola
        B:addPergolas=true

        # Adds: Pineapple, Cactus Pear, & Grapes(also requires Pergolas)
        # IDs: plants
        B:addPlants=true

        # Adds: Tall Grass that can spread and grow into Double Tall Grass
        # IDs: tall_grass
        B:addTallGrass=true

        # Adds: Apple, Chery, Orange, Coconut, & Banana Trees
        # IDs: planks, sapling, trunk1, trunk2, foliage1, foliage2, foliage3, foliage4, foliage5
        B:addTrees=true
    }

    ##########################################################################################################
    # items
    #--------------------------------------------------------------------------------------------------------#
    # Controls what items are added by Terraqueous
    # Disabling an item after it was added will remove it from the world
    ##########################################################################################################

    items {
        # Temporary protection from heat
        # IDs: burnium_belt
        B:addBurniumBelt=true

        # IDs: multifood & Entity: coconut
        B:addFood=true

        # IDs: colorizer, hammer, multitool, scythe
        B:addTools=true

        # Defy ..er.. Delay Gravity
        # IDs: toon_trotters
        B:addToonTrotters=true

        # Adds a craftable infinite 'water bucket'
        # IDs: water_pearl
        B:addWaterPearl=true
    }

    ##########################################################################################################
    # tweaks
    #--------------------------------------------------------------------------------------------------------#
    # Make adjustments to how different blocks/items function
    ##########################################################################################################

    tweaks {
        # Stops Terraqueous fences from visually connecting to blocks with a hardness at or less then this number.
        # to disable set to -1
        # Min: -1.0
        # Max: 20.0
        D:fenceConnectionCutoff=0.6

        # List of effects Trickster Bloom can apply
        S:listTricksterBloomEffects <
            effect[minecraft:speed];time[30-60];level[0-1]
            effect[minecraft:slowness];time[10-20];level[0-1]
            effect[minecraft:haste];time[60-120];level[0-1]
            effect[minecraft:mining_fatigue];time[60-120];level[0-1]
            effect[minecraft:jump_boost];time[60-120];level[0-1]
            effect[minecraft:nausea];time[10];level[0]
            effect[minecraft:fire_resistance];time[150-300];level[0-1]
            effect[minecraft:water_breathing];time[150-300];level[0-1]
            effect[minecraft:invisibility];time[60-300];level[0-1]
            effect[minecraft:blindness];time[30-60];level[0-1]
            effect[minecraft:night_vision];time[60-120];level[0-1]
            effect[minecraft:hunger];time[10-30];level[0-1]
            effect[minecraft:weakness];time[10-20];level[0-1]
            effect[minecraft:wither];time[3-5];level[0]
            effect[minecraft:absorption];time[30-60];level[0-1]
            effect[minecraft:saturation];time[15-30];level[0-1]
            effect[minecraft:glowing];time[30-60];level[0-1]
            effect[minecraft:levitation];time[10-20];level[0-1]
            effect[minecraft:luck];time[30-60];level[0-1]
            effect[minecraft:unluck];time[20-40];level[0-1]
         >

        chests {
            # Village Blacksmith Chests can contain a Molecular Colorizer
            B:chestBlacksmith_Colorizer=true

            # Dungeon Chests can contain a Molecular Colorizer
            B:chestDungeon_Colorizer=true

            # Dungeon Chests can contain the Toon Trotters
            B:chestDungeon_ToonTrotters=true

            # Mineshaft Chests can contain DeathFruit
            B:chestMineshaft_DeathFruit=true

            # Nether Bridge Chests can contain a Strange Scroll
            B:chestNetherBridge_Scroll=true

            # Spawn Bonus Chests can contain LifeFruit
            B:chestSpawnBonus_LifeFruit=true

            # Stronghold Library Chests can contain a Strange Scroll
            B:chestStronghold_Scroll=true
        }

        doodads {

            stick {
                # Items listed here can never drop
                # Formats: Dictionary Item: 'ore:<dictionary name>', Mod Item: '<modId>:<itemId>', Exact Mod Item: '<modId>:<itemId>@<meta>', Entire Mod: 'mod:<modId>'
                S:blacklist <
                 >

                # The number of attempts made to suscessfully drop an item
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropAttempts=1

                # '1 in x' chance the doodad will drop something from the whitelist, excluding items from the blacklist
                # Min: 0
                # Max: 2147483647
                I:dropChance=1

                # The number of items to drop on a suscessful attempt
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropCount=-2

                # Items listed here have a chance to drop
                # Formats: Dictionary Item: 'ore:<dictionary name>#<count>', Mod Item: '<modId>:<itemId>#<count>', Exact Mod Item: '<modId>:<itemId>@<meta>#<count>'
                S:whitelist <
                    minecraft:stick@0#1-3
                 >
            }

            stone {
                # Items listed here can never drop
                # Formats: Dictionary Item: 'ore:<dictionary name>', Mod Item: '<modId>:<itemId>', Exact Mod Item: '<modId>:<itemId>@<meta>', Entire Mod: 'mod:<modId>'
                S:blacklist <
                    ore:dust*Burnium
                    ore:dust*Endimium
                 >

                # The number of attempts made to suscessfully drop an item
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropAttempts=1

                # '1 in x' chance the doodad will drop something from the whitelist, excluding items from the blacklist
                # Min: 0
                # Max: 2147483647
                I:dropChance=1

                # The number of items to drop on a suscessful attempt
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropCount=-2

                # Items listed here have a chance to drop
                # Formats: Dictionary Item: 'ore:<dictionary name>#<count>', Mod Item: '<modId>:<itemId>@<meta>#<count>'
                S:whitelist <
                    ore:dust*#1
                    terraqueous:item_main@215#1
                 >
            }

            bone {
                # Items listed here can never drop
                # Formats: Dictionary Item: 'ore:<dictionary name>', Mod Item: '<modId>:<itemId>', Exact Mod Item: '<modId>:<itemId>@<meta>', Entire Mod: 'mod:<modId>'
                S:blacklist <
                 >

                # The number of attempts made to suscessfully drop an item
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropAttempts=1

                # '1 in x' chance the doodad will drop something from the whitelist, excluding items from the blacklist
                # Min: 0
                # Max: 2147483647
                I:dropChance=1

                # The number of items to drop on a suscessful attempt
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropCount=-2

                # Items listed here have a chance to drop
                # Formats: Dictionary Item: 'ore:<dictionary name>#<count>', Mod Item: '<modId>:<itemId>@<meta>#<count>'
                S:whitelist <
                    minecraft:bone@0#1
                    minecraft:dye@15#1-3
                 >
            }

            sandstone {
                # Items listed here can never drop
                # Formats: Dictionary Item: 'ore:<dictionary name>', Mod Item: '<modId>:<itemId>', Exact Mod Item: '<modId>:<itemId>@<meta>', Entire Mod: 'mod:<modId>'
                S:blacklist <
                    ore:dust*Burnium
                    ore:dust*Endimium
                 >

                # The number of attempts made to suscessfully drop an item
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropAttempts=1

                # '1 in x' chance the doodad will drop something from the whitelist, excluding items from the blacklist
                # Min: 0
                # Max: 2147483647
                I:dropChance=1

                # The number of items to drop on a suscessful attempt
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropCount=-2

                # Items listed here have a chance to drop
                # Formats: Dictionary Item: 'ore:<dictionary name>#<count>', Mod Item: '<modId>:<itemId>@<meta>#<count>'
                S:whitelist <
                    ore:dust*#1
                    terraqueous:item_main@214#1
                 >
            }

            redsandstone {
                # Items listed here can never drop
                # Formats: Dictionary Item: 'ore:<dictionary name>', Mod Item: '<modId>:<itemId>', Exact Mod Item: '<modId>:<itemId>@<meta>', Entire Mod: 'mod:<modId>'
                S:blacklist <
                    ore:dust*Burnium
                    ore:dust*Endimium
                 >

                # The number of attempts made to suscessfully drop an item
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropAttempts=1

                # '1 in x' chance the doodad will drop something from the whitelist, excluding items from the blacklist
                # Min: 0
                # Max: 2147483647
                I:dropChance=1

                # The number of items to drop on a suscessful attempt
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropCount=-2

                # Items listed here have a chance to drop
                # Formats: Dictionary Item: 'ore:<dictionary name>#<count>', Mod Item: '<modId>:<itemId>@<meta>#<count>'
                S:whitelist <
                    ore:dust*#1
                    terraqueous:item_main@216#1
                 >
            }

            endimium {
                # Items listed here can never drop
                # Formats: Dictionary Item: 'ore:<dictionary name>', Mod Item: '<modId>:<itemId>', Exact Mod Item: '<modId>:<itemId>@<meta>', Entire Mod: 'mod:<modId>'
                S:blacklist <
                 >

                # The number of attempts made to suscessfully drop an item
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropAttempts=1

                # '1 in x' chance the doodad will drop something from the whitelist, excluding items from the blacklist
                # Min: 0
                # Max: 2147483647
                I:dropChance=1

                # The number of items to drop on a suscessful attempt
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropCount=-3

                # Items listed here have a chance to drop
                # Formats: Dictionary Item: 'ore:<dictionary name>#<count>', Mod Item: '<modId>:<itemId>@<meta>#<count>'
                S:whitelist <
                    ore:gemEndimium#1-3
                    ore:dustEndimium#1-2
                    ore:dustTinyEndimium#1-4
                 >
            }

            burnium {
                # Items listed here can never drop
                # Formats: Dictionary Item: 'ore:<dictionary name>', Mod Item: '<modId>:<itemId>', Exact Mod Item: '<modId>:<itemId>@<meta>', Entire Mod: 'mod:<modId>'
                S:blacklist <
                 >

                # The number of attempts made to suscessfully drop an item
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropAttempts=1

                # '1 in x' chance the doodad will drop something from the whitelist, excluding items from the blacklist
                # Min: 0
                # Max: 2147483647
                I:dropChance=1

                # The number of items to drop on a suscessful attempt
                # positive numbers are exact, negitive are a random chance between 0 and the number
                I:dropCount=-3

                # Items listed here have a chance to drop
                # Formats: Dictionary Item: 'ore:<dictionary name>#<count>', Mod Item: '<modId>:<itemId>@<meta>#<count>'
                S:whitelist <
                    ore:gemBurnium#1-3
                    ore:dustBurnium#1-2
                    ore:dustTinyBurnium#1-4
                 >
            }

        }

        flowerpots {
            # Items Listed will render in flower pots using the Block render style
            S:forceBlockRender <
             >

            # Items Listed will render in flower pots using the Cross render style
            S:forceCrossRender <
             >

            # Items Listed will render in flower pots using the Pane render style
            S:forcePaneRender <
                minecraft:golden_rail
                minecraft:detector_rail
                minecraft:ladder
                minecraft:rail
                minecraft:iron_bars
                minecraft:glass_pane
                minecraft:vine
                minecraft:waterlily
                minecraft:activator_rail
                minecraft:stained_glass_pane
                terraqueous:blockFlowerPot
             >

            # Items Listed will render in flower pots using the Tall render style
            S:forceTallRender <
                minecraft:cactus
             >
        }

        glassshards {
            # Glass Blocks will drop shards when broken, if it would otherwise drop nothing
            B:enableGlassShardDropsForBlocks=true

            # Splash Potions will drop a shard when broken
            B:enableGlassShardDropsForPotions=true
        }

        mobs {
            # Adds two AITasks
            # Animals the follow for wheat will also follow for hay
            # Animals that eat grass will also eat hay
            B:addHayAITasks=true

            # Adds Burnium Dust and Coal Dust
            B:enableBlazeDropTweaks=true

            # Adds feather moulting
            B:enableChickenDropTweaks=false

            # Adds Endimium Dust and Ender Dust
            B:enableEndermanDropTweaks=true

            # Adds Burnium Dust and Coal Dust
            B:enableMagmaCubeDropTweaks=true

            # Must be enabled for any of the ones bellow to work
            B:enableMobDropTweaks=true

            # Adds Burnium Dust and Coal Dust
            B:enablePigZombieDropTweaks=true

            # Adds Golden Apple
            B:enableSkeletonDropTweaks=true

            # Adds Worn Leather Boots and Belt
            B:enableZombieDropTweaks=true
        }

        trees {
            # Controls if the fruit stays on the trees or randomly falls off
            B:fruitStaysOnTrees=true

            sapling_grow {
                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:apple=10

                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:banana=10

                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:cherry=10

                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:coconut=10

                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:lemon=10

                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:mango=10

                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:orange=10

                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:peach=10

                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:pear=10

                # '1 in x' chance the sapling will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:plum=10
            }

            flower_grow {
                # '1 in x' chance the fruit flower will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:apple=25

                # '1 in x' chance the fruit flower will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:banana=15

                # '1 in x' chance the fruit flower will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:cherry=25

                # '1 in x' chance the fruit flower will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:lemon=15

                # '1 in x' chance the fruit flower will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:mango=25

                # '1 in x' chance the fruit flower will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:orange=25

                # '1 in x' chance the fruit flower will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:peach=25

                # '1 in x' chance the fruit flower will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:pear=25

                # '1 in x' chance the fruit flower will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:plum=25
            }

            fruit_grow {
                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:apple=40

                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:banana=20

                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:cherry=40

                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:coconut=20

                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:lemon=30

                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:mango=50

                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:orange=40

                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:peach=40

                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:pear=50

                # '1 in x' chance the fruit will grow on the next block update
                # Min: 0
                # Max: 2147483647
                I:plum=40
            }

            fruit_fall {
                # '1 in x' chance a fruit will fall on the next block update
                # If 'fruitStaysOnTrees' is set true, fruit will never drop
                # Min: 0
                # Max: 2147483647
                I:apple=50

                # '1 in x' chance a fruit will fall on the next block update
                # If 'fruitStaysOnTrees' is set true, fruit will never drop
                # Min: 0
                # Max: 2147483647
                I:cherry=50

                # '1 in x' chance a fruit will fall on the next block update
                # If 'fruitStaysOnTrees' is set true, fruit will never drop
                # Min: 0
                # Max: 2147483647
                I:coconut=50

                # '1 in x' chance a fruit will fall on the next block update
                # If 'fruitStaysOnTrees' is set true, fruit will never drop
                # Min: 0
                # Max: 2147483647
                I:lemon=40

                # '1 in x' chance a fruit will fall on the next block update
                # If 'fruitStaysOnTrees' is set true, fruit will never drop
                # Min: 0
                # Max: 2147483647
                I:mango=60

                # '1 in x' chance a fruit will fall on the next block update
                # If 'fruitStaysOnTrees' is set true, fruit will never drop
                # Min: 0
                # Max: 2147483647
                I:orange=50

                # '1 in x' chance a fruit will fall on the next block update
                # If 'fruitStaysOnTrees' is set true, fruit will never drop
                # Min: 0
                # Max: 2147483647
                I:peach=50

                # '1 in x' chance a fruit will fall on the next block update
                # If 'fruitStaysOnTrees' is set true, fruit will never drop
                # Min: 0
                # Max: 2147483647
                I:pear=60

                # '1 in x' chance a fruit will fall on the next block update
                # If 'fruitStaysOnTrees' is set true, fruit will never drop
                # Min: 0
                # Max: 2147483647
                I:plum=50
            }

            sapling_drop {
                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:apple=15

                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:banana=8

                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:cherry=20

                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:coconut=8

                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:lemon=12

                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:mango=20

                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:orange=15

                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:peach=15

                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:pear=20

                # '1 in x' chance a sapling will drop when leaves are broken
                # Min: 0
                # Max: 2147483647
                I:plum=15
            }

        }

        plants {
            # '1 in x' chance a fully grown cactus will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:cactus_FruitGrow_day=0

            # '1 in x' chance a fully grown cactus will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:cactus_FruitGrow_night=40

            # '1 in x' chance the cactus will grow on the next block update
            # Min: 0
            # Max: 2147483647
            I:cactus_PlantGrow_day=0

            # '1 in x' chance the cactus will grow on the next block update
            # Min: 0
            # Max: 2147483647
            I:cactus_PlantGrow_night=8

            # '1 in x' chance a deathvine will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:deathvine_FruitGrow_normal=20

            # '1 in x' chance a deathvine will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:deathvine_FruitGrow_rain=40

            # '1 in x' chance the deathvine will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:deathvine_Spread_normal=0

            # '1 in x' chance the deathvine will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:deathvine_Spread_rain=0

            # '1 in x' chance the flower will grow on the next block update
            # Min: 0
            # Max: 2147483647
            I:flower_Grow_normal=1

            # '1 in x' chance the flower will grow on the next block update
            # Min: 0
            # Max: 2147483647
            I:flower_Grow_rain=1

            # '1 in x' chance the flower will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:flower_Spread_normal=0

            # '1 in x' chance the flower will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:flower_Spread_rain=0

            # If enabled Terraqueous flowers require shears to harvest, otherwise nothing will drop
            B:flowersRequireShears=true

            # '1 in x' chance a grapevine will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:grapevine_FruitGrow_normal=20

            # '1 in x' chance a grapevine will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:grapevine_FruitGrow_rain=40

            # '1 in x' chance the grapevine will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:grapevine_Spread_normal=0

            # '1 in x' chance the grapevine will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:grapevine_Spread_rain=0

            # '1 in x' chance the grass will become double tall on the next block update
            # Min: 0
            # Max: 2147483647
            I:grass_Grow_normal=0

            # '1 in x' chance the grass will become double tall on the next block update
            # Min: 0
            # Max: 2147483647
            I:grass_Grow_rain=5

            # '1 in x' chance the grass will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:grass_Spread_normal=0

            # '1 in x' chance the grass will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:grass_Spread_rain=0

            # '1 in x' chance a lifevine will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:lifevine_FruitGrow_normal=20

            # '1 in x' chance a lifevine will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:lifevine_FruitGrow_rain=40

            # '1 in x' chance the lifevine will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:lifevine_Spread_normal=15

            # '1 in x' chance the lifevine will spread on the next block update
            # Min: 0
            # Max: 2147483647
            I:lifevine_Spread_rain=13

            # '1 in x' chance a fully grown pineapple will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:pineapple_FruitGrow_normal=20

            # '1 in x' chance a fully grown pineapple will grow fruit on the next block update
            # Min: 0
            # Max: 2147483647
            I:pineapple_FruitGrow_rain=40

            # '1 in x' chance the pineapple will grow on the next block update
            # Min: 0
            # Max: 2147483647
            I:pineapple_PlantGrow_normal=8

            # '1 in x' chance the pineapple will grow on the next block update
            # Min: 0
            # Max: 2147483647
            I:pineapple_PlantGrow_rain=5
        }

        water_pearl {
            # Register's the item to the OreDictionary under 'listAllWater' enabling its use in recipes
            B:enableInfiniteWaterBucket=true
            B:enableInfiniteWaterTank=true

            # Prevent breath loss while held, or in the hotbar, or equipped as a bauble
            B:enableWaterBreathing=true

            # Allows the placement water into the world
            B:enableWorldPlacement=false
        }

        ##########################################################################################################
        # stormforge
        #--------------------------------------------------------------------------------------------------------#
        # 1EU = 4RF = 10J = 0.4MJ (http://ftbwiki.org/Power_Systems)
        ##########################################################################################################

        stormforge {
            # When charging with Energy Units, sfPowerPerTickBase times this equals the base EU/t
            # Min: 0.001
            # Max: 1000.0
            D:sfPowerMultiplierEU=1.0

            # When charging with Forge Units, sfPowerPerTickBase times this equals the base FU/t
            # Min: 0.001
            # Max: 1000.0
            D:sfPowerMultiplierFU=4.0

            # When charging with Immersive Flux, sfPowerPerTickBase times this equals the base IF/t
            # Min: 0.001
            # Max: 1000.0
            D:sfPowerMultiplierIF=4.0

            # When charging with Joules, sfPowerPerTickBase times this equals the base J/t
            # Min: 0.001
            # Max: 1000.0
            D:sfPowerMultiplierJ=10.0

            # When charging with Redstone Flux, sfPowerPerTickBase times this equals the base RF/t
            # Min: 0.001
            # Max: 1000.0
            D:sfPowerMultiplierRF=4.0

            # When charging with Tesla, sfPowerPerTickBase times this equals the base Tesla/t
            # Min: 0.001
            # Max: 1000.0
            D:sfPowerMultiplierTesla=4.0

            # The base amount of energy charged per tick
            # This value is multiplied by the PowerMultiplier that matches the items requirements
            # Min: 1
            # Max: 2048
            I:sfPowerPerTickBase=32

            # The number of ticks needed to repair an item by one point
            # Min: 20
            # Max: 6000
            I:sfTicksPerRepairPoint=100

            # The number of ticks needed to smelt an item, for reference a furnace takes 200
            # Min: 20
            # Max: 6000
            I:sfTicksToSmelt=400
        }

    }

    gui_style {
        # Valid values:
        # DEFAULT
        # VANILLA
        S:cloud_craftbench=DEFAULT

        # Valid values:
        # DEFAULT
        # VANILLA
        S:cloud_craftfurnace=DEFAULT

        # Valid values:
        # DEFAULT
        # VANILLA
        S:cloud_furnace=DEFAULT

        # Valid values:
        # DEFAULT
        # VANILLA
        S:cloud_workbench=DEFAULT

        # Valid values:
        # DEFAULT
        # VANILLA
        S:colorizer=DEFAULT

        # Valid values:
        # DEFAULT
        # VANILLA
        S:craftbench=DEFAULT

        # Valid values:
        # DEFAULT
        # VANILLA
        S:craftfurnace=DEFAULT

        # Valid values:
        # DEFAULT
        # VANILLA
        S:endertable=DEFAULT

        # Valid values:
        # DEFAULT
        # VANILLA
        S:stormforge=DEFAULT
    }

    ##########################################################################################################
    # permissions
    #--------------------------------------------------------------------------------------------------------#
    #  
    ##########################################################################################################

    permissions {
        # Controls who has permission to create a StormForge.
        # 0 = No One, 1 = OP's Only, 2 = OP's and Creative Players, 3 = Everyone
        # NOTE: Does not disable/remove existing StormForges
        # NOTE: StormForges require addCraftables
        # Min: 0
        # Max: 3
        I:permissionStormForge=3
    }

    ##########################################################################################################
    # generator
    #--------------------------------------------------------------------------------------------------------#
    # Options used by the world generator
    ##########################################################################################################

    generator {
        # This is a general on/off toggle
        # For more control see the sub menu
        B:generateClouds=true

        # This is a general on/off toggle
        # For more control see the sub menu
        B:generateDoodads=true

        # This is a general on/off toggle
        # For more control see the sub menu
        B:generateFlowers=false

        # It is recommended to leave this off unless you have other blocks that generate in flat worlds, otherwise Trees and Flowers will take over
        B:generateInFlatWorlds=false

        # This is a general on/off toggle
        # For more control see the sub menu
        B:generatePlants=true

        # This is a general on/off toggle
        # For more control see the sub menu
        B:generateTrees=true

        # Generation events allow other mods to disable my generators on a chunk by chunk basis, they are ignored by default
        B:ignoreGenerationEvents=true

        ##########################################################################################################
        # dim_blacklist
        #--------------------------------------------------------------------------------------------------------#
        # Generators will not generate in the dimensions on this list
        # The registered name is expected. [eg: overworld, the_nether, the_end] (regex supported)
        # To use the Id it must be prefixed with '#'. [eg: #0, #-1, #1]
        # Finding the registered name:
        # With an open source mod, running a search for DimensionType.register should get you the name. If not you'll need to look at the WorldProvider.
        # With closed sourced mods, asking the author or using a decompiler like JD-GUI are your options.
        ##########################################################################################################

        dim_blacklist {
            S:clouds <
             >
            S:doodads <
             >
            S:flowers <
             >

            # Dimensions here are blacklist from all generators
            S:global <
                Spectre
                CompactMachines
             >
            S:plants <
             >
            S:trees <
             >
        }

        clouds {
            # A value greater then zero will be used as the clouds generation height
            # Min: 0
            # Max: 2048
            I:cloudHeightOverride=0
            B:generateCloud_Dense=true
            B:generateCloud_Light=true
            B:generateCloud_Storm=true
        }

        doodads {
            # The chance the generator has at excuting in each chunk
            # Min: 0
            # Max: 100
            I:chunkChance_Bone=75

            # The chance the generator has at excuting in each chunk
            # Min: 0
            # Max: 100
            I:chunkChance_Burnium=75

            # The chance the generator has at excuting in each chunk
            # Min: 0
            # Max: 100
            I:chunkChance_Endimium=75

            # The chance the generator has at excuting in each chunk
            # Min: 0
            # Max: 100
            I:chunkChance_Stick=75

            # The chance the generator has at excuting in each chunk
            # Min: 0
            # Max: 100
            I:chunkChance_Stone=75
            B:generateDoodad_Bone=true
            B:generateDoodad_Burnium=true
            B:generateDoodad_Endimium=true
            B:generateDoodad_Stick=true
            B:generateDoodad_Stone=true
        }

        flowers {
            # The chance the generator has at excuting in this biome per chunk
            # Min: 0
            # Max: 100
            I:biomeChance_Forest=50

            # The chance the generator has at excuting in this biome per chunk
            # Min: 0
            # Max: 100
            I:biomeChance_Jungle=50

            # The chance the generator has at excuting in this biome per chunk
            # Min: 0
            # Max: 100
            I:biomeChance_Magical=50

            # The chance the generator has at excuting in this biome per chunk
            # Min: 0
            # Max: 100
            I:biomeChance_Mountain=50

            # The chance the generator has at excuting in this biome per chunk
            # Min: 0
            # Max: 100
            I:biomeChance_Plains=50

            # The chance the generator has at excuting in this biome per chunk
            # Min: 0
            # Max: 100
            I:biomeChance_Water=50

            # The chance the generator has at excuting in each chunk
            # This is only used if 'generateInFlatWorlds' is true and the biome ones are ignored
            # Min: 0
            # Max: 100
            I:chunkChance=50
        }

        plants {
            # The chance the generator has at excuting in each chunk
            # This is only used if 'generateInFlatWorlds' is true and the chunk ones are ignored
            # Min: 0
            # Max: 100
            I:chunkChance=50

            # The chance the generator has at excuting in each chunk
            # Min: 0
            # Max: 100
            I:chunkChance_CactusPear=75

            # The chance the generator has at excuting in each chunk
            # Min: 0
            # Max: 100
            I:chunkChance_Pineapple=100
            B:generatePlant_CactusPear=true
            B:generatePlant_Pineapple=true
        }

        trees {
            # The chance the generator has at excuting in this biome per chunk
            # Trees Found Here: Coconut
            # Min: 0
            # Max: 100
            I:biomeChance_Beach=40

            # The chance the generator has at excuting in this biome per chunk
            # Trees Found Here: Apple, Pear, Mango
            # Min: 0
            # Max: 100
            I:biomeChance_Forest=50

            # The chance the generator has at excuting in this biome per chunk
            # Trees Found Here: Cherry, Orange, Lemon, Plum
            # Min: 0
            # Max: 100
            I:biomeChance_Hills=30

            # The chance the generator has at excuting in this biome per chunk
            # Trees Found Here: Banana
            # Min: 0
            # Max: 100
            I:biomeChance_Jungle=50

            # The chance the generator has at excuting in this biome per chunk
            # Trees Found Here: Peach
            # Min: 0
            # Max: 100
            I:biomeChance_Mountain=35

            # The chance the generator has at excuting in each chunk
            # This is only used if 'generateInFlatWorlds' is true and the biome ones are ignored
            # Min: 0
            # Max: 100
            I:chunkChance=35
            B:generateTree_Apple=true
            B:generateTree_Banana=true
            B:generateTree_Cherry=true
            B:generateTree_Coconut=true
            B:generateTree_Lemon=true
            B:generateTree_Mango=true
            B:generateTree_Orange=true
            B:generateTree_Peach=true
            B:generateTree_Pear=true
            B:generateTree_Plum=true
        }

        village {
            # Enables Death Fruit vines to generate on the Pergola
            B:enableDeathFruitVines=true

            # Enables Grape vines to generate on the Pergola
            B:enableGrapeVines=true

            # Enables Life Fruit vines to generate on the Pergola
            B:enableLifeFruitVines=true

            # Generates a Pergola in villages, enabled vines have a chance to spawn it
            B:generateVillage_Vineyard=true

            # When a pergola generates a random number [0-19] is chosen to pick the vine overlay
            # This is a list of values that result in the DeathFruitVine
            # Min: 0
            # Max: 19
            I:valuesDeathFruitVine <
                5
                19
             >

            # When a pergola generates a random number [0-19] is chosen to pick the vine overlay
            # This is a list of values that result in the GrapeVine
            # Min: 0
            # Max: 19
            I:valuesGrapeVine <
                1
                4
                8
                9
                10
                11
                15
                18
             >

            # When a pergola generates a random number [0-19] is chosen to pick the vine overlay
            # This is a list of values that result in the LifeFruitVine
            # Min: 0
            # Max: 19
            I:valuesLifeFruitVine <
                0
                14
             >
        }

    }

    ##########################################################################################################
    # crafting
    #--------------------------------------------------------------------------------------------------------#
    # Disable DustCrafting if another mod add the same recipes and these override them.
    # Disable CraftToDust if unneeded and/or another mod adds a machine that does this.
    ##########################################################################################################

    crafting {
        # Craft lumps of Gravel into a block
        B:enableCrafting_LumpToGravel=true

        # Craft lumps of Red Sandstone into a block
        B:enableCrafting_LumpToRedSandstone=true

        # Craft lumps of Sandstone into a block
        B:enableCrafting_LumpToSandstone=true

        # Craft tiny piles of Coal Dust into piles
        B:enableCrafting_TinyDustToCoalDust=true

        # Craft tiny piles of Diamond Dust into piles
        B:enableCrafting_TinyDustToDiamondDust=true

        # Craft tiny piles of Emerald Dust into piles
        B:enableCrafting_TinyDustToEmeraldDust=true

        # Craft tiny piles of Ender Dust into piles
        B:enableCrafting_TinyDustToEnderDust=true

        # Craft tiny piles of Gold Dust into piles
        B:enableCrafting_TinyDustToGoldDust=true

        # Craft tiny piles of Iron Dust into piles
        B:enableCrafting_TinyDustToIronDust=true

        # Craft tiny piles of Lapis Dust into Lapis
        B:enableCrafting_TinyDustToLapis=true

        # Craft tiny piles of Redstone Dust into Redstone Dust
        B:enableCrafting_TinyDustToRedstone=true

        # Smash Coal into Dust
        B:enableSmashing_CoalToDust=true

        # Smash Diamonds into Dust
        B:enableSmashing_DiamondToDust=true

        # Smash Ender Pearls into Dust
        B:enableSmashing_EnderPearlsToDust=true

        # Craft Wool into String
        B:enableWoolToString=true
    }

    ##########################################################################################################
    # integration
    #--------------------------------------------------------------------------------------------------------#
    # Mod integration can be disabled to solve compatibility issues, remove unwanted/unneeded features, etc.
    ##########################################################################################################

    integration {
        # Enables the CloudTalisman and WaterPearl to be equipped as a bauble
        B:enableBaubles=true

        # Facade changes; adds missing blocks and removes blocks that look bad
        B:enableBuildCraft=true

        # Adds: fruit to squeezer, saplings to fermenter, and various items to backpacks
        B:enableForestry=true

        # Adds: fruit to the BioReactor, endimium/burnium ore to the LaserDrill, and flowers/cactus pear/pineapple/banana stalk to the Plant Gatherer
        B:enableIndustrialForegoing=true

        # Adds Colorizer Module for Robots
        B:enableOpenComputers=true

        # Adds color data to tooltips
        B:enableWAILA=true
    }

}


